{"version":3,"sources":["panels/Meta.js","panels/EventCard.js","utils/Filter.js","panels/FilterPanel.js","panels/EventCardList.js","panels/UserHeader.js","panels/UserProfile.js","panels/FriendsEvents.js","panels/LocationEvents.js","panels/Event.js","panels/TabsRoot.js","App.js","routes.js","index.js","create-router.js","store/reducers.js"],"names":["Meta","name","content","ProjectCard","props","event","router","useRoute","size","onClick","navigate","id","console","log","before","description","style","display","location","asideContent","Math","round","price","bottomContent","e","stopPropagation","mode","marginLeft","Filter","date","args","this","element","key","value","FilterPanel","filterValues","onUpdate","defaultChecked","onChange","target","checked","ProjectCardList","events","useState","currentModal","setCurrentModal","filter","setFilter","filterModal","route","activeModal","onClose","header","level","dynamicContentHeight","data","modal","separator","map","EventCard","UserHeader","rating","user","className","disabled","multiline","src","photo_200","text","item","weight","first_name","last_name","GET_PROJECTS","gql","UserProfile","useRouteNode","useRouter","useQuery","loading","error","fetchedUser","setUser","useEffect","a","bridge","send","subscribe","detail","type","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","alignItems","justifyContent","flexDirection","height","message","EventCardList","Events","GET_EVENTS","FriendsEvents","setFriends","friends","LocationEvents","setLocation","marginTop","padding","defaultState","center","zoom","width","geometry","Event","params","left","window","history","back","lat","lng","TABS__","icon","TabsRoot","activeStory","setActiveStory","currentTab","tab","tabName","onStoryChange","to","currentTarget","dataset","story","tabBarComponent","index","selected","data-story","tabbar","client","ApolloClient","uri","App","path","createRouter","routes","defaultRoute","usePlugin","loggerPlugin","browserPlugin","useHash","configureRouter","store","initialState","createStoreWithMiddleware","applyMiddleware","thunk","router5Middleware","createLogger","createStore","combineReducers","router5Reducer","start","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.29ee240f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Meta = () => {\r\n  return (\r\n      <meta\r\n        name=\"viewport\"\r\n        content=\"width=device-width, initial-scale=1, shrink-to-fit=no, user-scalable=no, viewport-fit=cover\"\r\n      ></meta>\r\n  );\r\n};\r\n\r\nexport default Meta;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Cell, Button, Avatar } from \"@vkontakte/vkui\";\r\nimport Icon24User from \"@vkontakte/icons/dist/24/user\";\r\nimport Icon16Place from \"@vkontakte/icons/dist/16/place\";\r\nimport Icon24MoneyCircle from \"@vkontakte/icons/dist/24/money_circle\";\r\nimport { useRouter, withRouter, useRoute } from \"react-router5\";\r\n\r\nconst ProjectCard = (props) => {\r\n  const { event } = props;\r\n  const { router } = useRoute();\r\n  \r\n\r\n  return (\r\n    <Card size=\"l\" onClick={() => { router.navigate('event', { id: event.id, event }); console.log('card click') }}>\r\n      <Cell\r\n        before={\r\n          <Avatar size={32}>\r\n            <Icon24User />\r\n          </Avatar>\r\n        }\r\n        size=\"l\"\r\n        description={\r\n          <div style={{ display: \"flex\" }}>\r\n            <Icon16Place />\r\n            {event.location.name}\r\n          </div>\r\n        }\r\n        asideContent={\r\n          <div>\r\n            <Icon24MoneyCircle />\r\n            {Math.round(event.price)}\r\n          </div>\r\n        }\r\n        bottomContent={\r\n          <>\r\n            <div>{event.description}</div>\r\n            <div style={{ display: \"flex\" }}>\r\n              <Button size=\"m\" onClick={(e) => { e.stopPropagation(); console.log('click will participate') }}>Пойду</Button>\r\n              <Button size=\"m\" onClick={(e) => { e.stopPropagation(); console.log('hide') }} mode=\"secondary\" style={{ marginLeft: 8 }}>\r\n                Скрыть\r\n              </Button>\r\n            </div>\r\n          </>\r\n        }\r\n      >\r\n        {event.name}\r\n      </Cell>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProjectCard.propTypes = {\r\n  event: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default ProjectCard;\r\n","class Filter {\n    constructor(location, date, args) {\n        this.location = location;\n        this.date = date;\n    }\n    update(element) {\n        this[element.key] = element.value;\n    }\n}\n\nexport default Filter;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Switch,\r\n  Cell,\r\n  Div\r\n} from \"@vkontakte/vkui\";\r\n\r\nconst FilterPanel = (props) => {\r\n\r\n  const { filterValues, onUpdate } = props;\r\n\r\n  return (\r\n    <Div>\r\n      <Cell asideContent={<Switch defaultChecked={filterValues['location']} onChange={(e) => onUpdate({ key: 'location', value: e.target.checked })} />}>Рядом</Cell>\r\n      <Cell asideContent={<Switch defaultChecked={filterValues['date']} onChange={(e) => onUpdate({ key: 'date', value: e.target.checked })} />}>Скоро</Cell>\r\n      <Cell></Cell><Cell></Cell>\r\n    </Div>\r\n  )\r\n};\r\n\r\nFilterPanel.propTypes = {\r\n  onUpdate: PropTypes.func.isRequired,\r\n  filterValues: PropTypes.object.isRequired\r\n};\r\n\r\nexport default FilterPanel;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Group,\r\n  CardGrid,\r\n  CellButton,\r\n  View,\r\n  ModalRoot,\r\n  ModalPage,\r\n  ModalPageHeader,\r\n  Title,\r\n} from \"@vkontakte/vkui\";\r\n\r\nimport Icon24Sort from \"@vkontakte/icons/dist/24/sort\";\r\n\r\nimport EventCard from \"./EventCard\";\r\nimport Filter from \"../utils/Filter\";\r\nimport FilterPanel from \"./FilterPanel\";\r\nimport { useRoute } from \"react-router5\";\r\n\r\nconst MAIN_MODAL = \"main-modal\";\r\n\r\nconst ProjectCardList = (props) => {\r\n  const { events } = props;\r\n  const [currentModal, setCurrentModal] = useState(null);\r\n  const [filter, setFilter] = useState(new Filter(null, null));\r\n\r\n  const { route } = useRoute();\r\n\r\n  const updateFilter = (data) => {\r\n    const {key, value} = data;\r\n    setFilter({\r\n      ...filter,\r\n      [key]: value\r\n    })\r\n  }\r\n\r\n  const filterModal = (\r\n    <ModalRoot\r\n      activeModal={currentModal}\r\n      onClose={() => {\r\n        setCurrentModal(null);\r\n      }}\r\n    >\r\n      <ModalPage\r\n        id={MAIN_MODAL}\r\n        header={<ModalPageHeader><Title level=\"2\">Фильтры</Title></ModalPageHeader>}\r\n        dynamicContentHeight\r\n      >\r\n        <FilterPanel filterValues={filter} onUpdate={updateFilter} />\r\n      </ModalPage>\r\n    </ModalRoot>\r\n  );\r\n\r\n  const filteredEvents = events.filter((element) => {\r\n    return true;\r\n  });\r\n\r\n  return (\r\n    <View modal={filterModal}>\r\n      <Group\r\n        separator=\"hide\"\r\n        header={\r\n          <CellButton\r\n            before={<Icon24Sort />}\r\n            onClick={() => {\r\n              setCurrentModal(MAIN_MODAL);\r\n            }}\r\n          >\r\n            Фильтровать\r\n          </CellButton>\r\n        }\r\n      >\r\n        <CardGrid>\r\n          {events.map((event, key) => (\r\n            <EventCard key={key} event={event} />\r\n          ))}\r\n        </CardGrid>\r\n      </Group>\r\n    </View>\r\n  );\r\n};\r\n\r\nProjectCardList.propTypes = {\r\n  events: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ProjectCardList;\r\n","import React from \"react\";\nimport { Avatar, RichCell, Div, Title } from \"@vkontakte/vkui\";\nimport PropTypes from \"prop-types\";\n\nimport Icon24User from \"@vkontakte/icons/dist/24/user\";\n\nimport \"./UserProfile.css\";\n\nconst UserHeader = (props) => {\n\n  const { rating, user } = props;\n  const userName = \"Никита Долгошеин\";\n\n  return (\n    <RichCell\n      className=\"user-profile-header\"\n      disabled\n      multiline\n      before={\n        <Avatar\n          size={72}\n          src={user !== null ? user.photo_200 : null}\n        >\n          {user === null ? <Icon24User /> : null}\n        </Avatar>\n      }\n      text={\n        <Div className=\"user-profile-satisfied\">\n          {rating.map((item, key) => (\n            <Div className=\"user-profile-satisfied-col\" key={key}>\n              <Title level=\"2\">{item.key}</Title>\n              <Title level=\"3\">{item.value}</Title>\n            </Div>\n          ))}\n        </Div>\n      }\n    >\n      <Title level=\"2\" weight=\"regular\">\n        {user !== null\n          ? `${user.first_name} ${user.last_name}`\n          : userName}\n      </Title>\n    </RichCell>\n  );\n};\n\nUserHeader.propTypes = {\n  rating: PropTypes.array,\n  user: PropTypes.object\n}\n\nexport default UserHeader;\n","import React, { useState, useEffect } from \"react\";\r\nimport { Panel, PanelSpinner } from \"@vkontakte/vkui\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport \"./UserProfile.css\";\r\nimport EventCardList from \"./EventCardList\";\r\nimport UserHeader from \"./UserHeader\";\r\nimport { useRouteNode, useRouter } from \"react-router5\";\r\n\r\nconst GET_PROJECTS = gql`\r\n  {\r\n    Events(id: \"123\") {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      location {\r\n        lat\r\n        lng\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UserProfile = (props) => {\r\n  const { route } = useRouteNode(\"me\");\r\n  const router = useRouter();\r\n  \r\n  // Fetch data\r\n  const { loading, error, data } = useQuery(GET_PROJECTS);\r\n\r\n  const rating = [\r\n    { key: \"😊\", value: 101 },\r\n    { key: \"😴\", value: 11 },\r\n    { key: \"😍\", value: 35 },\r\n    { key: \"🤬\", value: 4 },\r\n  ];\r\n\r\n  const [fetchedUser, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    bridge.subscribe(({ detail: { type, data } }) => {\r\n      if (type === \"VKWebAppUpdateConfig\") {\r\n        const schemeAttribute = document.createAttribute(\"scheme\");\r\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\r\n        document.body.attributes.setNamedItem(schemeAttribute);\r\n      }\r\n    });\r\n    async function fetchData() {\r\n      const user = await bridge.send(\"VKWebAppGetUserInfo\");\r\n      setUser(user);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Display loading animation\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          height: \"100%\"\r\n        }}\r\n      >\r\n        <PanelSpinner size=\"large\" />\r\n      </div>\r\n    );\r\n  if (error) return `Error: ${error.message}`;\r\n\r\n  return (\r\n    <Panel>\r\n      <UserHeader user={fetchedUser} rating={rating} />\r\n      <EventCardList events={data.Events} />\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Panel, Spinner } from \"@vkontakte/vkui\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport EventCardList from \"./EventCardList\";\nimport { useRouteNode } from \"react-router5\";\n\nconst GET_EVENTS = gql`\n  {\n    Events(id: \"123\") {\n      id\n      name\n      description\n      price\n      location {\n        lat\n        lng\n        name\n      }\n    }\n  }\n`;\n\nconst FriendsEvents = (props) => {\n  const { route } = useRouteNode(\"friends\");\n  // Fetch data\n  const { loading, error, data } = useQuery(GET_EVENTS);\n  const [friends, setFriends] = useState(null);\n\n  useEffect(() => {\n    bridge.subscribe(({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        const schemeAttribute = document.createAttribute(\"scheme\");\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    async function fetchData() {\n      const friends = await bridge.send(\"VKWebAppGetFriends\");\n      setFriends(friends);\n    }\n    fetchData();\n  }, []);\n\n  // Display loading animation\n  if (loading)\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n          height: \"100%\"\n        }}\n      >\n        <Spinner size=\"large\" style={{  }} />\n      </div>\n    );\n  if (error) return `Error: ${error.message}`;\n\n  return (\n    <Panel>\n      <EventCardList events={data.Events} />\n    </Panel>\n  );\n};\n\nexport default FriendsEvents;\n","import React, { useState, useEffect } from \"react\";\nimport { Panel, Spinner, Div } from \"@vkontakte/vkui\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { YMaps, Map, Placemark } from 'react-yandex-maps';\n\nimport EventCardList from \"./EventCardList\";\nimport { useRouteNode } from \"react-router5\";\n\nconst GET_EVENTS = gql`\n  {\n    Events(id: \"123\") {\n      id\n      name\n      description\n      price\n      location {\n        lat\n        lng\n        name\n      }\n    }\n  }\n`;\n\nconst LocationEvents = (props) => {\n  const { route } = useRouteNode(\"location\");\n  // Fetch data\n  const { loading, error, data } = useQuery(GET_EVENTS);\n  const [location, setLocation] = useState(null);\n\n  useEffect(() => {\n    bridge.subscribe(({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        const schemeAttribute = document.createAttribute(\"scheme\");\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    async function fetchData() {\n      const location = await bridge.send(\"VKWebAppGetGeodata\");\n      setLocation(location);\n    }\n    fetchData();\n  }, []);\n\n  // Display loading animation\n  if (loading)\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <Spinner size=\"large\" style={{ marginTop: 20 }} />\n      </div>\n    );\n  if (error) return `Error: ${error.message}`;\n\n  return (\n    <Panel>\n      <Div style={{ height: \"240px\", padding: 0 }}>\n        <YMaps >\n          <Map defaultState={{ center: [56.85, 60.6], zoom: 10 }} width={'100%'}>\n            <Placemark geometry={[56.85, 60.6]} />\n          </Map>\n        </YMaps>\n      </Div>\n      <EventCardList events={data.Events} />\n    </Panel>\n  );\n};\n\nexport default LocationEvents;\n","import React from \"react\";\r\nimport { useRouteNode } from \"react-router5\";\r\nimport { PanelHeaderButton, Panel, PanelHeader } from \"@vkontakte/vkui\";\r\nimport Icon24Back from \"@vkontakte/icons/dist/24/back\";\r\nimport { YMaps, Map, Placemark } from \"react-yandex-maps\";\r\n\r\nconst Event = (props) => {\r\n  const { route } = useRouteNode('event');\r\n\r\n  const { id, event } = route.params;\r\n\r\n  if (!event) {\r\n    console.log(event);\r\n  }\r\n\r\n  return (\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={\r\n          <PanelHeaderButton onClick={() => { window.history.back(); }}>\r\n            {<Icon24Back />}\r\n          </PanelHeaderButton>\r\n        }\r\n      >\r\n        {event.name}\r\n      </PanelHeader>\r\n      <YMaps>\r\n        <Map defaultState={{ center: [event.location.lat, event.location.lng], zoom: 10 }} width={'100%'}>\r\n          <Placemark geometry={[event.location.lat, event.location.lng]} />\r\n        </Map>\r\n      </YMaps>\r\n      {event.location.name}\r\n      {event.price}\r\n      {event.description}\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport default Event;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useRouter, useRoute } from \"react-router5\";\r\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\r\nimport \"@vkontakte/vkui/dist/vkui.css\";\r\nimport { Tabbar, TabbarItem, Epic } from \"@vkontakte/vkui\";\r\n\r\nimport Icon28BombOutline from \"@vkontakte/icons/dist/28/bomb_outline\";\r\nimport Icon28PlaceOutline from \"@vkontakte/icons/dist/28/place_outline\";\r\nimport Icon28GhostOutline from \"@vkontakte/icons/dist/28/ghost_outline\";\r\n\r\nimport UserProfile from \"./UserProfile\";\r\nimport FriendsEvents from \"./FriendsEvents\";\r\nimport LocationEvents from \"./LocationEvents\";\r\nimport Event from \"./Event\";\r\n\r\nconst TABS__ = [\r\n  {\r\n    id: \"me\",\r\n    text: \"Мои\",\r\n    icon: <Icon28BombOutline />\r\n  },\r\n  {\r\n    id: \"location\",\r\n    text: \"Рядом\",\r\n    icon: <Icon28PlaceOutline />\r\n  },\r\n  {\r\n    id: \"friends\",\r\n    text: \"Друзья\",\r\n    icon: <Icon28GhostOutline />\r\n  }\r\n]\r\n\r\nconst TabsRoot = () => {\r\n  const { route } = useRoute();\r\n  const [activeStory, setActiveStory] = useState(null);\r\n  const router = useRouter();\r\n  const currentTab = TABS__.filter(tab => tab.id === route.name)[0];\r\n  const tabName = currentTab ? currentTab.id : TABS__[0].id;\r\n\r\n  useEffect(() => {\r\n    setActiveStory(tabName);\r\n  });\r\n\r\n  if (route.name === \"event\") {\r\n    return (\r\n      <Event />\r\n    );\r\n  }\r\n\r\n\r\n  const onStoryChange = (e) => {\r\n    const to = e.currentTarget.dataset.story;\r\n    router.navigate(to);\r\n    setActiveStory(to);\r\n  };\r\n\r\n  const tabBarComponent = (\r\n    <Tabbar>\r\n      {TABS__.map((element, index) =>\r\n        <TabbarItem\r\n          onClick={onStoryChange}\r\n          selected={activeStory === element.id}\r\n          data-story={element.id}\r\n          text={element.text}\r\n          key={index}\r\n        >\r\n          {element.icon}\r\n        </TabbarItem>\r\n      )}\r\n    </Tabbar>\r\n  );\r\n\r\n  return (\r\n    <Epic\r\n      activeStory={activeStory}\r\n      tabbar={\r\n        tabBarComponent\r\n      }\r\n    >\r\n      <View id=\"me\" key=\"0\">\r\n        <UserProfile />\r\n      </View>\r\n      <View id=\"location\" key=\"1\">\r\n        <LocationEvents />\r\n      </View>\r\n      <View id=\"friends\" key=\"2\">\r\n        <FriendsEvents />\r\n      </View>\r\n    </Epic>\r\n  );\r\n};\r\n\r\nexport default TabsRoot;\r\n","import React from \"react\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\n\nimport Meta from \"./panels/Meta\";\nimport TabsRoot from \"./panels/TabsRoot\";\nimport { useRoute } from \"react-router5\";\n\nconst client = new ApolloClient({\n  uri: \"https://dvizh-api.herokuapp.com/\",\n});\n\nconst App = (props) => {\n  const router = useRoute();\n\n  return (\n    <>\n      <Meta />\n\n      <ApolloProvider client={client}>\n        <TabsRoot />\n      </ApolloProvider>\n    </>\n  );\n};\n\nexport default App;\n","export default [\r\n  { name: \"main\", path: \"/\" },\r\n  { name: \"me\", path: \"/me\" },\r\n  { name: \"friends\", path: \"/friends\" },\r\n  { name: \"location\", path: \"/location\" },\r\n  { name: \"event\", path: \"/event/:id\" },\r\n  { name: \"user\", path: \"/user/:id\" }\r\n];\r\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RouterProvider } from \"react-router5\";\nimport { Provider } from \"react-redux\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\nimport createStore from \"./store/reducers\";\nimport configureRouter from \"./create-router\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nconst router = configureRouter();\nconst store = createStore(router);\n\n\nrouter.start(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <RouterProvider router={router}>\n        <App router={router} />\n      </RouterProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then((eruda) => { }); //runtime download\n}\n","import createRouter from \"router5\";\r\nimport loggerPlugin from \"router5-plugin-logger\";\r\nimport browserPlugin from \"router5-plugin-browser\";\r\nimport { reduxPlugin } from \"redux-router5\";\r\nimport routes from \"./routes\";\r\nimport store from \"./store/reducers\";\r\n\r\nexport default function configureRouter() {\r\n  const router = createRouter(routes, {\r\n    defaultRoute: \"me\",\r\n  });\r\n\r\n  router.usePlugin(loggerPlugin);\r\n  router.usePlugin(\r\n    browserPlugin({\r\n      useHash: true,\r\n    })\r\n  );\r\n\r\n  return router;\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { router5Middleware, router5Reducer } from 'redux-router5';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nexport default function configureStore(router, initialState = {}) {\n  const createStoreWithMiddleware = applyMiddleware(\n    thunk,\n    router5Middleware(router),\n    createLogger()\n  )(createStore);\n\n  const store = createStoreWithMiddleware(\n    combineReducers({\n      router: router5Reducer\n    }),\n    initialState\n  );\n\n  window.store = store;\n  return store;\n}"],"sourceRoot":""}