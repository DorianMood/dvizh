{"version":3,"sources":["panels/Meta.js","panels/ProjectCard.js","panels/ProjectCardList.js","panels/Rating.js","panels/UserProfile.js","panels/TabsRoot.js","App.js","routes.js","index.js","create-router.js"],"names":["Meta","name","content","ProjectCard","props","project","size","before","description","style","display","location","asideContent","Math","round","price","bottomContent","mode","marginLeft","GET_PROJECTS","gql","ProjectCardList","useQuery","loading","error","data","message","id","separator","header","Events","map","index","key","Rating","rating","propTypes","PropTypes","any","isRequired","UserProfile","className","disabled","multiline","text","level","caption","TabsRoot","useState","activeStory","setActiveStory","setActivePanel","setUser","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","go","e","currentTarget","dataset","to","onStoryChange","story","tabbar","onClick","selected","data-story","activePanel","client","ApolloClient","uri","App","path","router","createRouter","routes","defaultRoute","usePlugin","loggerPlugin","browserPlugin","useHash","start","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0cb0f3b8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Meta = () => {\r\n  return (\r\n      <meta\r\n        name=\"viewport\"\r\n        content=\"width=device-width, initial-scale=1, shrink-to-fit=no, user-scalable=no, viewport-fit=cover\"\r\n      ></meta>\r\n  );\r\n};\r\n\r\nexport default Meta;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Cell, Button, Avatar } from \"@vkontakte/vkui\";\r\nimport Icon24User from \"@vkontakte/icons/dist/24/user\";\r\nimport Icon16Place from \"@vkontakte/icons/dist/16/place\";\r\nimport Icon24MoneyCircle from \"@vkontakte/icons/dist/24/money_circle\";\r\n\r\nconst ProjectCard = (props) => {\r\n  const { project } = props;\r\n\r\n  return (\r\n    <Card size=\"l\">\r\n      <Cell\r\n        before={\r\n          <Avatar size={32}>\r\n            <Icon24User />\r\n          </Avatar>\r\n        }\r\n        size=\"l\"\r\n        description={\r\n          <div style={{ display: \"flex\" }}>\r\n            <Icon16Place />\r\n            {project.location.name}\r\n          </div>\r\n        }\r\n        asideContent={\r\n          <div>\r\n            <Icon24MoneyCircle />\r\n            {Math.round(project.price)}\r\n          </div>\r\n        }\r\n        bottomContent={\r\n          <>\r\n            <div>{project.description}</div>\r\n            <div style={{ display: \"flex\" }}>\r\n              <Button size=\"m\">–ü–æ–π–¥—É</Button>\r\n              <Button size=\"m\" mode=\"secondary\" style={{ marginLeft: 8 }}>\r\n                –°–∫—Ä—ã—Ç—å\r\n              </Button>\r\n            </div>\r\n          </>\r\n        }\r\n      >\r\n        {project.name}\r\n      </Cell>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProjectCard.propTypes = {\r\n  project: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Panel, Group, CardGrid, CellButton } from \"@vkontakte/vkui\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport Icon24Sort from \"@vkontakte/icons/dist/24/sort\";\r\n\r\nimport ProjectCard from \"./ProjectCard\";\r\n\r\nconst GET_PROJECTS = gql`\r\n  {\r\n    Events(id: \"123\") {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      location {\r\n        lat\r\n        lng\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ProjectCardList = (props) => {\r\n  const { loading, error, data } = useQuery(GET_PROJECTS);\r\n\r\n  if (loading) return <p>loading...</p>;\r\n  if (error) return `Error! ${error.message}`;\r\n\r\n  return (\r\n    <Panel id={props.id}>\r\n      <Group\r\n        separator=\"hide\"\r\n        header={<CellButton before={<Icon24Sort />}>–§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å</CellButton>}\r\n      >\r\n        <CardGrid>\r\n          {data.Events.map((project, index) => (\r\n            <ProjectCard key={index} project={project} />\r\n          ))}\r\n        </CardGrid>\r\n      </Group>\r\n    </Panel>\r\n  );\r\n};\r\n\r\nProjectCardList.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ProjectCardList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Rating = (props) => <>{props.rating}</>;\r\n\r\nRating.propTypes = {\r\n  rating: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default Rating;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Panel,\r\n  Group,\r\n  CardGrid,\r\n  CellButton,\r\n  Avatar,\r\n  RichCell,\r\n  Progress,\r\n  Div,\r\n  InfoRow,\r\n  Title\r\n} from \"@vkontakte/vkui\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport Icon24User from \"@vkontakte/icons/dist/24/user\";\r\nimport Icon24Sort from \"@vkontakte/icons/dist/24/sort\";\r\n\r\nimport Rating from \"./Rating\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport \"./UserProfile.css\";\r\n\r\nconst GET_PROJECTS = gql`\r\n  {\r\n    Events(id: \"123\") {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      location {\r\n        lat\r\n        lng\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UserProfile = (props) => {\r\n  const { loading, error, data } = useQuery(GET_PROJECTS);\r\n\r\n  if (loading) return <p>loading...</p>;\r\n  if (error) return `Error! ${error.message}`;\r\n\r\n  return (\r\n    <Panel id={props.id}>\r\n      <RichCell\r\n        className=\"user-profile-header\"\r\n        disabled\r\n        multiline\r\n        before={\r\n          <Avatar size={72}>\r\n            <Icon24User />\r\n          </Avatar>\r\n        }\r\n        text={\r\n          <Div className=\"user-profile-satisfied\">\r\n            <Div className=\"user-profile-satisfied-col\">üòä<Title level=\"3\">1234</Title></Div>\r\n            <Div className=\"user-profile-satisfied-col\">üò¥<Title level=\"3\">1337</Title></Div>\r\n            <Div className=\"user-profile-satisfied-col\">üòç<Title level=\"3\">22</Title></Div>\r\n            <Div className=\"user-profile-satisfied-col\">ü§¨<Title level=\"3\">11</Title></Div>\r\n          </Div>\r\n        }\r\n        caption=\"–í—á–µ—Ä–∞ –≤ 20:30\"\r\n      >\r\n        <b>–ù–∏–∫–∏—Ç–∞ –î–æ–ª–≥–æ—à–µ–∏–Ω</b>\r\n      </RichCell>\r\n\r\n      <Group\r\n        separator=\"hide\"\r\n        header={<CellButton before={<Icon24Sort />}>–§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å</CellButton>}\r\n      >\r\n        <CardGrid>\r\n          {data.Events.map((project, index) => (\r\n            <ProjectCard key={index} project={project} />\r\n          ))}\r\n        </CardGrid>\r\n      </Group>\r\n    </Panel>\r\n  );\r\n};\r\n\r\nUserProfile.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default UserProfile;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\r\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\r\nimport \"@vkontakte/vkui/dist/vkui.css\";\r\nimport { Tabbar, TabbarItem, Epic } from \"@vkontakte/vkui\";\r\n\r\nimport Icon28BombOutline from \"@vkontakte/icons/dist/28/bomb_outline\";\r\nimport Icon28PlaceOutline from \"@vkontakte/icons/dist/28/place_outline\";\r\nimport Icon28GhostOutline from \"@vkontakte/icons/dist/28/ghost_outline\";\r\n\r\nimport ProjectCardList from \"./ProjectCardList\";\r\nimport UserProfile from \"./UserProfile\";\r\n\r\nconst TabsRoot = () => {\r\n  const [activeStory, setActiveStory] = useState(\"projects-my\");\r\n  const [activePanel, setActivePanel] = useState(\"projects-my\");\r\n  const [fetchedUser, setUser] = useState(null);\r\n  const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\r\n\r\n  useEffect(() => {\r\n    bridge.subscribe(({ detail: { type, data } }) => {\r\n      if (type === \"VKWebAppUpdateConfig\") {\r\n        const schemeAttribute = document.createAttribute(\"scheme\");\r\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\r\n        document.body.attributes.setNamedItem(schemeAttribute);\r\n      }\r\n    });\r\n    async function fetchData() {\r\n      const user = await bridge.send(\"VKWebAppGetUserInfo\");\r\n      setUser(user);\r\n      setPopout(null);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const go = (e) => {\r\n    setActivePanel(e.currentTarget.dataset.to);\r\n  };\r\n\r\n  const onStoryChange = (e) => {\r\n    setActiveStory(e.currentTarget.dataset.story);\r\n  };\r\n\r\n  return (\r\n    <Epic\r\n      activeStory={activeStory}\r\n      tabbar={\r\n        <Tabbar>\r\n          <TabbarItem\r\n            onClick={onStoryChange}\r\n            selected={activeStory === \"projects-my\"}\r\n            data-story=\"projects-my\"\r\n            text=\"–ú–æ–∏\"\r\n          >\r\n            <Icon28BombOutline />\r\n          </TabbarItem>\r\n          <TabbarItem\r\n            onClick={onStoryChange}\r\n            selected={activeStory === \"projects-near\"}\r\n            data-story=\"projects-near\"\r\n            text=\"–†—è–¥–æ–º\"\r\n          >\r\n            <Icon28PlaceOutline />\r\n          </TabbarItem>\r\n          <TabbarItem\r\n            onClick={onStoryChange}\r\n            selected={activeStory === \"projects-friends\"}\r\n            data-story=\"projects-friends\"\r\n            text=\"–î—Ä—É–∑—å—è\"\r\n          >\r\n            <Icon28GhostOutline />\r\n          </TabbarItem>\r\n        </Tabbar>\r\n      }\r\n    >\r\n      <View id=\"projects-my\" activePanel=\"profile\">\r\n        <UserProfile id=\"profile\" />\r\n      </View>\r\n      <View id=\"projects-near\" activePanel=\"projects\">\r\n        <ProjectCardList id=\"projects\" go={go} />\r\n      </View>\r\n      <View id=\"projects-friends\" activePanel=\"projects\">\r\n        <ProjectCardList id=\"projects\" go={go} />\r\n      </View>\r\n    </Epic>\r\n  );\r\n};\r\n\r\nexport default TabsRoot;\r\n","import React from \"react\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\n\nimport Meta from \"./panels/Meta\";\nimport TabsRoot from \"./panels/TabsRoot\";\n\nconst client = new ApolloClient({\n  uri: \"https://dvizh-api.herokuapp.com/\",\n});\n\nconst App = () => {\n  return (\n    <>\n      <Meta />\n\n      <ApolloProvider client={client}>\n\t\t  <TabsRoot />\n      </ApolloProvider>\n    </>\n  );\n};\n\nexport default App;\n","export default [\r\n  { name: \"main\", path: \"/main\" },\r\n  { name: \"project\", path: \"/project\" },\r\n  { name: \"user\", path: \"/user\" },\r\n];\r\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\nimport createRouter from \"./create-router\";\nimport { RouterProvider } from \"react-router5\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nconst router = createRouter();\n\nrouter.start(() => {\n  ReactDOM.render(\n    <RouterProvider router={router}>\n      <App router={router} />\n    </RouterProvider>,\n    document.getElementById(\"root\")\n  );\n});\n\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then((eruda) => {}); //runtime download\n}\n","import createRouter from \"router5\";\r\nimport loggerPlugin from \"router5-plugin-logger\";\r\nimport browserPlugin from \"router5-plugin-browser\";\r\nimport routes from \"./routes\";\r\n\r\nexport default function configureRouter() {\r\n  const router = createRouter(routes, {\r\n    defaultRoute: \"main\",\r\n  });\r\n\r\n  router.usePlugin(loggerPlugin);\r\n  router.usePlugin(\r\n    browserPlugin({\r\n      useHash: true,\r\n    })\r\n  );\r\n\r\n  return router;\r\n}\r\n"],"sourceRoot":""}